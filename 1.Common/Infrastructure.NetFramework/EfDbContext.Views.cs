//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Infrastructure.NetFramework.EfDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets9586fb74067244b156aa73d86e00d97a61e6aa8b9293a3546aa8cff702dd24b0))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets9586fb74067244b156aa73d86e00d97a61e6aa8b9293a3546aa8cff702dd24b0 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "9586fb74067244b156aa73d86e00d97a61e6aa8b9293a3546aa8cff702dd24b0"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Customer")
            {
                return GetView0();
            }

            if (extentName == "EfDbContext.Customers")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.OrderItem")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Order")
            {
                return GetView3();
            }

            if (extentName == "EfDbContext.OrderItems")
            {
                return GetView4();
            }

            if (extentName == "EfDbContext.Orders")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.SqlLog")
            {
                return GetView6();
            }

            if (extentName == "EfDbContext.SqlLogs")
            {
                return GetView7();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customer
        [CodeFirstDatabaseSchema.Customer](T1.Customer_Id, T1.Customer_Name, T1.Customer_Age, T1.Customer_CreateTime)
    FROM (
        SELECT 
            T.Id AS Customer_Id, 
            T.Name AS Customer_Name, 
            T.Age AS Customer_Age, 
            T.CreateTime AS Customer_CreateTime, 
            True AS _from0
        FROM EfDbContext.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EfDbContext.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [Infrastructure.NetFramework.Customer](T1.Customer_Id, T1.Customer_Name, T1.Customer_Age, T1.Customer_CreateTime)
    FROM (
        SELECT 
            T.Id AS Customer_Id, 
            T.Name AS Customer_Name, 
            T.Age AS Customer_Age, 
            T.CreateTime AS Customer_CreateTime, 
            True AS _from0
        FROM CodeFirstDatabase.Customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.OrderItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OrderItem
        [CodeFirstDatabaseSchema.OrderItem](T1.OrderItem_Id, T1.OrderItem_ProductName, T1.OrderItem_Qty, T1.OrderItem_Price, T1.OrderItem_OrderId, T1.OrderItem_CreateTime)
    FROM (
        SELECT 
            T.Id AS OrderItem_Id, 
            T.ProductName AS OrderItem_ProductName, 
            T.Qty AS OrderItem_Qty, 
            T.Price AS OrderItem_Price, 
            T.OrderId AS OrderItem_OrderId, 
            T.CreateTime AS OrderItem_CreateTime, 
            True AS _from0
        FROM EfDbContext.OrderItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Order.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Order
        [CodeFirstDatabaseSchema.Order](T1.Order_Id, T1.Order_OrderNo, T1.Order_TotalAmount, T1.Order_UserName, T1.Order_CreateTime)
    FROM (
        SELECT 
            T.Id AS Order_Id, 
            T.OrderNo AS Order_OrderNo, 
            T.TotalAmount AS Order_TotalAmount, 
            T.UserName AS Order_UserName, 
            T.CreateTime AS Order_CreateTime, 
            True AS _from0
        FROM EfDbContext.Orders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EfDbContext.OrderItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OrderItems
        [Infrastructure.NetFramework.OrderItem](T1.OrderItem_Id, T1.OrderItem_ProductName, T1.OrderItem_Qty, T1.OrderItem_Price, T1.OrderItem_OrderId, T1.OrderItem_CreateTime)
    FROM (
        SELECT 
            T.Id AS OrderItem_Id, 
            T.ProductName AS OrderItem_ProductName, 
            T.Qty AS OrderItem_Qty, 
            T.Price AS OrderItem_Price, 
            T.OrderId AS OrderItem_OrderId, 
            T.CreateTime AS OrderItem_CreateTime, 
            True AS _from0
        FROM CodeFirstDatabase.OrderItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EfDbContext.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [Infrastructure.NetFramework.Order](T1.Order_Id, T1.Order_OrderNo, T1.Order_TotalAmount, T1.Order_UserName, T1.Order_CreateTime)
    FROM (
        SELECT 
            T.Id AS Order_Id, 
            T.OrderNo AS Order_OrderNo, 
            T.TotalAmount AS Order_TotalAmount, 
            T.UserName AS Order_UserName, 
            T.CreateTime AS Order_CreateTime, 
            True AS _from0
        FROM CodeFirstDatabase.[Order] AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.SqlLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SqlLog
        [CodeFirstDatabaseSchema.SqlLog](T1.SqlLog_Id, T1.SqlLog_Sql, T1.SqlLog_Parameters, T1.SqlLog_CommandType, T1.SqlLog_Milliseconds, T1.SqlLog_Exception, T1.SqlLog_CreateTime)
    FROM (
        SELECT 
            T.Id AS SqlLog_Id, 
            T.Sql AS SqlLog_Sql, 
            T.Parameters AS SqlLog_Parameters, 
            T.CommandType AS SqlLog_CommandType, 
            T.Milliseconds AS SqlLog_Milliseconds, 
            T.Exception AS SqlLog_Exception, 
            T.CreateTime AS SqlLog_CreateTime, 
            True AS _from0
        FROM EfDbContext.SqlLogs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EfDbContext.SqlLogs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SqlLogs
        [Infrastructure.NetFramework.SqlLog](T1.SqlLog_Id, T1.SqlLog_Sql, T1.SqlLog_Parameters, T1.SqlLog_CommandType, T1.SqlLog_Milliseconds, T1.SqlLog_Exception, T1.SqlLog_CreateTime)
    FROM (
        SELECT 
            T.Id AS SqlLog_Id, 
            T.Sql AS SqlLog_Sql, 
            T.Parameters AS SqlLog_Parameters, 
            T.CommandType AS SqlLog_CommandType, 
            T.Milliseconds AS SqlLog_Milliseconds, 
            T.Exception AS SqlLog_Exception, 
            T.CreateTime AS SqlLog_CreateTime, 
            True AS _from0
        FROM CodeFirstDatabase.SqlLog AS T
    ) AS T1");
        }
    }
}
