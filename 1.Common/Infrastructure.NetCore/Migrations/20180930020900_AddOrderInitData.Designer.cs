// <auto-generated />
using System;
using Infrastructure.NetCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.NetCore.Migrations
{
    [DbContext(typeof(EfCoreDbContext))]
    [Migration("20180930020900_AddOrderInitData")]
    partial class AddOrderInitData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.NetCore.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("TotalAmount");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Order");

                    b.HasData(
                        new { Id = 1, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderNo = "PM1111", TotalAmount = 100m, UserName = "jim" },
                        new { Id = 2, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderNo = "PM2222", TotalAmount = 79m, UserName = "tom" },
                        new { Id = 3, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderNo = "PM3333", TotalAmount = 230m, UserName = "lucy" }
                    );
                });

            modelBuilder.Entity("Infrastructure.NetCore.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Qty");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new { Id = 1, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 1, Price = 1.2m, ProductName = "苹果", Qty = 12 },
                        new { Id = 2, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 1, Price = 2.3m, ProductName = "香蕉", Qty = 23 },
                        new { Id = 3, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 2, Price = 6.2m, ProductName = "凤梨", Qty = 7 },
                        new { Id = 4, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 2, Price = 3.4m, ProductName = "橘子", Qty = 14 },
                        new { Id = 5, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 2, Price = 12.9m, ProductName = "火龙果", Qty = 3 },
                        new { Id = 6, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 3, Price = 120m, ProductName = "披萨", Qty = 2 },
                        new { Id = 7, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 3, Price = 118m, ProductName = "KFC全家桶", Qty = 1 },
                        new { Id = 8, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 3, Price = 3.8m, ProductName = "香蕉", Qty = 1 },
                        new { Id = 9, CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), OrderId = 3, Price = 38m, ProductName = "百事可乐", Qty = 10 }
                    );
                });

            modelBuilder.Entity("Infrastructure.NetCore.Entities.OrderItem", b =>
                {
                    b.HasOne("Infrastructure.NetCore.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
